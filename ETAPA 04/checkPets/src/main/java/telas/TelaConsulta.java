/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import dao.ConsultaDao;
import dao.FuncionarioDao;
import dao.PetsDao;
import dao.VeterinarioDao;
import javax.swing.JOptionPane;
import model.Pets;
import model.Consulta;
import model.Funcionario;
import model.Veterinario;

/**
 *
 * @author User
 */
public class TelaConsulta extends javax.swing.JFrame {

    /**
     * Creates new form Consulta
     */
    public TelaConsulta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgConsulta = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblCheckPets = new javax.swing.JLabel();
        lblIdPet = new javax.swing.JLabel();
        lblCadastroDeFunconario = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        txtIdPet = new javax.swing.JTextField();
        txtIdVeterinario = new javax.swing.JTextField();
        txtMedicacao = new javax.swing.JTextField();
        rbNaoRealizada = new javax.swing.JRadioButton();
        rbRealizada = new javax.swing.JRadioButton();
        btCancelar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(31, 89, 116));

        lblCheckPets.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 60)); // NOI18N
        lblCheckPets.setForeground(new java.awt.Color(255, 255, 255));
        lblCheckPets.setText("CheckPets");

        lblIdPet.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 30)); // NOI18N
        lblIdPet.setForeground(new java.awt.Color(255, 255, 255));
        lblIdPet.setText("ID Pet:");

        lblCadastroDeFunconario.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 30)); // NOI18N
        lblCadastroDeFunconario.setForeground(new java.awt.Color(255, 255, 255));
        lblCadastroDeFunconario.setText("Consulta");

        lblTelefone.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 30)); // NOI18N
        lblTelefone.setForeground(new java.awt.Color(255, 255, 255));
        lblTelefone.setText("Medicação");

        lblDataNascimento.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 30)); // NOI18N
        lblDataNascimento.setForeground(new java.awt.Color(255, 255, 255));
        lblDataNascimento.setText("ID Veterinário");

        txtIdPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdPetActionPerformed(evt);
            }
        });

        txtIdVeterinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdVeterinarioActionPerformed(evt);
            }
        });

        txtMedicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicacaoActionPerformed(evt);
            }
        });

        btgConsulta.add(rbNaoRealizada);
        rbNaoRealizada.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 25)); // NOI18N
        rbNaoRealizada.setForeground(new java.awt.Color(255, 255, 255));
        rbNaoRealizada.setText("Não Realizada");
        rbNaoRealizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNaoRealizadaActionPerformed(evt);
            }
        });

        btgConsulta.add(rbRealizada);
        rbRealizada.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 25)); // NOI18N
        rbRealizada.setForeground(new java.awt.Color(255, 255, 255));
        rbRealizada.setText("Realizada");
        rbRealizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRealizadaActionPerformed(evt);
            }
        });

        btCancelar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(31, 89, 116));
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btSalvar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(31, 89, 116));
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCadastroDeFunconario)
                .addGap(247, 247, 247))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(lblCheckPets)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(rbRealizada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbNaoRealizada)
                .addGap(71, 71, 71))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefone)
                    .addComponent(lblDataNascimento)
                    .addComponent(lblIdPet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSalvar))
                    .addComponent(txtIdPet, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdVeterinario, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMedicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblCheckPets, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCadastroDeFunconario)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbRealizada)
                    .addComponent(rbNaoRealizada))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdPet)
                    .addComponent(txtIdPet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataNascimento)
                    .addComponent(txtIdVeterinario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefone)
                    .addComponent(txtMedicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btSalvar))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdPetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdPetActionPerformed

    private void txtIdVeterinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdVeterinarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdVeterinarioActionPerformed

    private void txtMedicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicacaoActionPerformed

    private void rbNaoRealizadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNaoRealizadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNaoRealizadaActionPerformed

    private void rbRealizadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRealizadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbRealizadaActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // Inicia o bloco de tratamento de exceções. Qualquer erro dentro deste bloco será capturado.
try {
    // --- SEÇÃO 1: CAPTURA E VALIDAÇÃO DOS DADOS DA INTERFACE ---

    // Captura o texto inserido pelo usuário no campo de ID do Pet.
    String idPetStr = txtIdPet.getText();
    // Captura o texto inserido pelo usuário no campo de ID do Veterinário.
    String idVeterinarioStr = txtIdVeterinario.getText();
    // Captura o texto inserido no campo de medicação.
    String novaMedicacao = txtMedicacao.getText();

    // Declara a variável booleana que armazenará o status da consulta.
    boolean consultaRealizada;

    // Verifica se o botão de rádio "Realizada" está selecionado.
    if (rbRealizada.isSelected()) {
        // Se sim, define a variável como verdadeira.
        consultaRealizada = true;
    // Senão, verifica se o botão "Não Realizada" está selecionado.
    } else if (rbNaoRealizada.isSelected()) {
        // Se sim, define a variável como falsa.
        consultaRealizada = false;
    // Se nenhum dos dois foi selecionado...
    } else {
        // ...exibe uma mensagem de erro para o usuário.
        JOptionPane.showMessageDialog(null, "Por favor, informe se a consulta foi realizada ou não.");
        // 'return' interrompe a execução do método, evitando que o código prossiga.
        return;
    }

    // Verifica se os campos de texto de ID estão vazios. '.trim()' remove espaços em branco.
    if (idPetStr.trim().isEmpty() || idVeterinarioStr.trim().isEmpty()) {
        // Se algum estiver vazio, exibe uma mensagem de erro.
        JOptionPane.showMessageDialog(this, "Todos os campos obrigatórios devem ser preenchidos!",
                "Erro de Validação", JOptionPane.ERROR_MESSAGE);
        // Interrompe a execução.
        return;
    }

    // Converte a String do ID do Pet para um número inteiro.
    int NovaIdPet = Integer.parseInt(idPetStr);
    // Converte a String do ID do Veterinário para um número inteiro.
    int NovaIdVeterinario = Integer.parseInt(txtIdVeterinario.getText());


    // --- SEÇÃO 2: VALIDAÇÃO DOS DADOS COM O BANCO DE DADOS ---

    // Cria uma instância do DAO de Pets para acessar o banco.
    PetsDao petsDao = new PetsDao();
    // Usa o ID para buscar o objeto Pet completo no banco de dados.
    Pets petDoBanco = petsDao.findById(NovaIdPet);

    // Verifica se a busca retornou um resultado nulo (ou seja, se o pet não foi encontrado).
    if (petDoBanco == null) {
        // Se não encontrou, informa ao usuário e interrompe o processo.
        JOptionPane.showMessageDialog(this, "Nenhum pet encontrado com o ID informado: " + NovaIdPet);
        return;
    }
    
    // Cria uma instância do DAO de Veterinários.
    VeterinarioDao veterinarioDao = new VeterinarioDao();
    // Busca o objeto Veterinario completo no banco.
    Veterinario veterinarioDoBanco = veterinarioDao.findById(NovaIdVeterinario);
    
    // Verifica se o veterinário foi encontrado.
    if (veterinarioDoBanco == null){
        // Se não, informa ao usuário e interrompe o processo.
        JOptionPane.showMessageDialog(this, "Nenhum Veterinário encontrado com o ID informado: " + NovaIdVeterinario);
        return;
    }


    // --- SEÇÃO 3: CRIAÇÃO E PERSISTÊNCIA DO OBJETO ---

    // Cria uma nova instância (objeto) da classe Consulta.
    Consulta novaConsulta = new Consulta();
    // Define os atributos do objeto com os dados validados.
    novaConsulta.setPet(petDoBanco);                // Associa o objeto Pet.
    novaConsulta.setVeterinario(veterinarioDoBanco);    // Associa o objeto Veterinário.
    novaConsulta.setMedicacao(novaMedicacao);         // Define a medicação.
    novaConsulta.setRealizada(consultaRealizada);     // Define o status (true/false).   
    
    // Cria uma instância do DAO de Consultas.
    ConsultaDao consultaDao = new ConsultaDao();
    
    // Chama o método 'salvar', que persistirá o objeto 'novaConsulta' no banco.
    consultaDao.salvar(novaConsulta);
    
    // --- SEÇÃO 4: FEEDBACK PARA O USUÁRIO ---

    // Exibe uma mensagem de sucesso para o usuário.
    JOptionPane.showMessageDialog(this, "Consulta salva com sucesso!");

// Captura especificamente erros de formato de número (ex: digitar "abc" em um campo de ID).
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "O ID do Pet e do Veterinário devem ser números válidos.");
// Captura qualquer outro tipo de erro que possa ocorrer (ex: falha de conexão com o banco).
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado: " + e.getMessage());
}
    }//GEN-LAST:event_btSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btSalvar;
    private javax.swing.ButtonGroup btgConsulta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCadastroDeFunconario;
    private javax.swing.JLabel lblCheckPets;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblIdPet;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JRadioButton rbNaoRealizada;
    private javax.swing.JRadioButton rbRealizada;
    private javax.swing.JTextField txtIdPet;
    private javax.swing.JTextField txtIdVeterinario;
    private javax.swing.JTextField txtMedicacao;
    // End of variables declaration//GEN-END:variables
}
